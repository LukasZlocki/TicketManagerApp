@page "/editticket/{id:int}"

@using TicketManager.Models.Models
@using TicketManagerApp.Services

@inject ITicketService TicketService
@inject ITestService TestService


<h3>EditTicket</h3>

<!--
 Table with base data
-->
<form>
    <div class="form-group">
        <label for="lblLabolatoryLocation">Lab location: @UserTicketVM.LabLocation.Factory / @UserTicketVM.LabLocation.Country </label>
    </div>
    <div class="form-group">
        <label for="lblRequestorEmail">Requestor email: @UserTicketVM.RequestorEmail</label>
    </div>
    <div class="form-group">
        <label for="lblRequestorDepartment">Requestor department: @UserTicketVM.RequestorDepartment.DepartmentDescription   </label>
    </div>
    <div class="form-group">
        <label for="lblproduct">
            Product:
            @UserTicketVM.Product.ProductFamily.FamilyDescription
            @UserTicketVM.Product.ProductType.ProductTypeDesc
            @UserTicketVM.Product.ProductDisplacement.Displacement
        </label>
    </div>
</form>




@code {
    [Parameter]
    public int Id { get; set; } // ticket primary key

    private Ticket? UserTicketVM = new Ticket
        {
            TicketTests = new List<TicketTest>(),
            RequestorDepartment = new Department
            {
                Factorylocation = new()
            },
            LabLocation = new(),
            Product = new Product
            {
                ProductFamily = new(),
                ProductType = new(),
                ProductDisplacement = new()
            },
            TicketStatus = new()
        };

    private TicketTest UserTicketTestVM = new TicketTest
        {
            TicketTestParameters = new List<TicketTestParameter>(),
            Test = new()
        };

    List<Test> TestsDedicatedList = new List<Test>();


    protected override async Task OnInitializedAsync()
    {
        UserTicketVM = await TicketService.GetTicketDetails(Id) ?? new Ticket();

        if (!(UserTicketVM.LabLocationId == 0))
        {
            int labLocationId = UserTicketVM.LabLocationId;
            TestsDedicatedList = await TestService.GetTestsByLabLocation(labLocationId) ?? new List<Test>();
        }
    }

}
