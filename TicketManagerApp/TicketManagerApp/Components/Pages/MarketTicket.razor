@page "/marketticket"

<h3>MarketTicket</h3>

@rendermode InteractiveServer

@using System.Security.Claims
@using TicketManager.Models.Models
@using TicketManagerApp.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity

@inject ITicketService TicketService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserService _userService;

<h3>Tickets to addres</h3>

<!--
 List with picked active tickets
-->
<br>
<div class="border-bottom border-white shadow rounded-lg" style="background-color: #ededed">
    <table class="table table-striped boarder table-hover">
        <tr>
            <th>Ticket nb</th>
            <th>Requestor</th>
            <th>Lab location</th>
            <th>Product type</th>
            <th>Implemented at</th>
            <th>Responsible</th>
            <th>Status</th>
            <th>Action</th>
        </tr>
        <tbody>
            @if (WaitingTicketsList == null || WaitingTicketsList.Count == 0)
            {
                <p><em>No waiting tickets found.</em></p>
            }
            else
                @foreach (var ticket in WaitingTicketsList)
                {
                    <tr>
                        <td>@ticket.IdentificationCode</td>
                        <td>@ticket.RequestorEmail</td>
                        <td>@ticket.LabLocation.Country</td>
                        <td>@ticket.Product.ProductFamily.FamilyDescription @ticket.Product.ProductType.ProductTypeDesc @ticket.Product.ProductDisplacement.Displacement</td>
                        <td>@ticket.ImplementedAt.ToString("yyyy-MM-dd, HH:mm")</td>
                        <td>@ticket.ResponsibleEmail</td>
                        <td>@ticket.TicketStatus.StatusDescription</td>
                        <td>
                            <div class="form-group">
                                <button class="btn-secondary btn-info" @onclick="() => InfoTicket(ticket.TicketId)">Info</button>
                                <button class="btn-secondary btn-sm" @onclick="() => ClaimTicket(ticket.TicketId)">Claim</button>
                            </div>
                        </td>
                    </tr>
                }
        </tbody>
    </table>
</div>

@code {

    List<Ticket>? WaitingTicketsList;
    string? ResponsibleEmail;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        // Get the user's email
        ResponsibleEmail = user.FindFirst(c => c.Type == ClaimTypes.Email)?.Value;

        WaitingTicketsList = await TicketService.GetAllWaitingTickets();
    }

    private void InfoTicket(int ticketId)
    {
        // Navigate to page with detailed ticket information
        Navigation.NavigateTo("/detailsticket/" + ticketId, true);
    }

    private async Task ClaimTicket(int ticketId)
    {
        try
        {
            await TicketService.UpdateClaimedTicket(ResponsibleEmail, ticketId);
        }
        catch (Exception e)
        {
            // ToDo: write logger to rise exception information
        }
        Navigation.NavigateTo("/marketticket");
    }

}